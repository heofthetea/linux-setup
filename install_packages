#!/bin/bash

docker() {
  # Add Docker's official GPG key:
  sudo apt update
  sudo apt install ca-certificates curl
  sudo install -m 0755 -d /etc/apt/keyrings
  sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
  sudo chmod a+r /etc/apt/keyrings/docker.asc

  # Add the repository to Apt sources:
  echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  sudo apt update


  sudo apt install docker-ce docker-ce-cli containerd.io

  sudo usermod -aG docker $USER
  sudo systemctl enable docker && sudo systemctl start docker
}


vscode() {
  sudo apt install software-properties-common apt-transport-https wget
  wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add -
  sudo add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main"
  sudo apt update
  sudo apt install code
}

zoxide() {
  sudo apt remove zoxide
  sudo apt install fzf
  curl --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/ajeetdsouza/zoxide/master/install.sh | bash
  echo "eval $(zoxide init --cmd cd bash)" >> ~/.bashrc
}


nvm() {
  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
  nvm install 18
}

chrome() {
  wget -qO - https://dl.google.com/linux/linux_signing_key.pub | gpg --dearmor | sudo tee /etc/apt/keyrings/google-chrome.gpg
  sudo sh -c 'echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list'

  sudo apt update

 sudo apt install google-chrome-stable
}


java() {
  cd /tmp
  wget https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.3+9/OpenJDK21U-jdk_x64_linux_hotspot_21.0.3_9.tar.gz
  sudo mkdir -p /usr/lib/jvm
  sudo tar -xvf OpenJDK21U-jdk_x64_linux_hotspot_21.0.3_9.tar.gz -C /usr/lib/jvm
}


latex ()  {
  sudo mkdir -p /usr/local/texlive/
  sudo chown -R "$USER" /usr/local/texlive

  mkdir /tmp/texlive
  cd /tmp/texlive
  wget http://mirror.ctan.org/systems/texlive/tlnet/install-tl.zip
  unzip ./install-tl.zip -d install-tl
  cd install-tl/install-tl-$(date +%Y%m%d)
  perl ./install-tl


  export PATH="$PATH:/usr/local/texlive/2024/bin/x86_64-linux"
  echo "PATH=$PATH:/usr/local/texlive/2024/bin/x86_64-linux" >> ~/.profile

  tlmgr install biblatex biber latexmk glossaries csquotes biblatex-ieee
}

firefox () {
	sudo install -d -m 0755 /etc/apt/keyrings
	wget -q https://packages.mozilla.org/apt/repo-signing-key.gpg -O- | sudo tee /etc/apt/keyrings/packages.mozilla.org.asc > /dev/null
	echo "deb [signed-by=/etc/apt/keyrings/packages.mozilla.org.asc] https://packages.mozilla.org/apt mozilla main" | sudo tee -a /etc/apt/sources.list.d/mozilla.list > /dev/null
	echo '
Package: *
Pin: origin packages.mozilla.org
Pin-Priority: 1000
' | sudo tee /etc/apt/preferences.d/mozilla
	sudo apt-get update && sudo apt-get install firefox
}


sudo apt install git neofetch sl swi-prolog-core flatpak gnome-tweaks gnome-shell-extensions

mkdir -p ~/tmp && cd ~/tmp

docker ; vscode ; zoxide ; nvm ; chrome ; latex ; java

read -p "Do you want to reboot the system? (y/n): " answer
if [[ $answer == "y" ]]; then
  reboot
fi
